# -*- coding: utf-8 -*-
"""Atualizado- IC - DadosStackOverflow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Z2GO3HJ0ijbgnVa4Ybm1_sh5WH7NYjC4
"""

import pandas as pd

#Abrindo arquivo
tabela = pd.read_excel('DadosStackExchange.xlsx')
tabela.head()

tags = tabela.loc[:, [
  'tags__001',
  'tags__002',
  'tags__003',
  'tags__004',
  'tags__005'
]]
tags.head()

# Contagem de valores por coluna
tags_contagem = pd.DataFrame()

for coluna in tags:
    contagem = tags[coluna].value_counts()
    dfContagem = pd.DataFrame(contagem)
    tags_contagem = tags_contagem.combine_first(dfContagem)

# Remover NaN
tags_contagem = tags_contagem.fillna(0)
tags_contagem

# Contagem total
tags_contagem.loc[:,'Total'] = tags_contagem.sum(axis=1)
tags_contagem

# Ordenar 
contagem_ordenada = tags_contagem.sort_values(by=['Total'],ascending = False)
contagem_ordenada

contagem_ordenada_index = contagem_ordenada.reset_index()
contagem_ordenada_index

import matplotlib.pyplot as plt
import numpy as np

maiores25 = contagem_ordenada_index.head(25).sort_values(by=['Total'])
maiores50 = contagem_ordenada_index.head(50).sort_values(by=['Total'])

plt.figure(figsize=(20, 10))
barra25 = plt.barh(maiores25['index'], maiores25['Total'], color = '#225500')
plt.savefig('barra25.png')

plt.figure(figsize=(20, 15))
barra50 = plt.barh(maiores50['index'], maiores50['Total'], color = '#220077')
plt.savefig('barra50.png')

def make_autopct(values):
    def my_autopct(pct):
        total = sum(values)
        val = int(round(pct*total/100.0))
        return '{p:.2f}%\n({v:d})'.format(p = pct,v = val)
    return my_autopct

c_ordenada25 = contagem_ordenada.head(25)
c_ordenada50 = contagem_ordenada.head(50)

pizza25 = c_ordenada25.plot.pie(y='Total', figsize=(20, 20), autopct=make_autopct(c_ordenada25['Total']))
pizza25.get_figure().savefig("pizza25.png")
pizza50 = c_ordenada50.plot.pie(y='Total', figsize=(20, 20), autopct=make_autopct(c_ordenada50['Total']))
pizza50.get_figure().savefig("pizza50.png")

from google.colab import files
files.download('barra25.png') 
files.download('barra50.png') 
files.download('pizza25.png') 
files.download('pizza50.png')

!pip install --upgrade apyori

from mlxtend.preprocessing import TransactionEncoder

colunas = list(tags)

# Criar array com lista de tags em cada linha do dataframe
tags_list = []
for linha in tags.itertuples(index=False):
  linha_list = []

  # Se valor não for nan adicionar a linha
  for i in range(len(colunas)):
    if str(linha[i]) != 'nan':
      linha_list.append(linha[i])

  tags_list.append(linha_list)

# Transformar para onehot
te = TransactionEncoder()
onehot = te.fit(tags_list).transform(tags_list)
pd_onehot = pd.DataFrame(onehot, columns=te.columns_)

pd_onehot.head()

from mlxtend.frequent_patterns import apriori

#support -> Apoio,suporte
#itemsets -> Conjunto de itens
#apriori(pd_onehot,  min_support=0.1,  use_colnames=True)

frequent_itemsets = apriori(pd_onehot,  min_support=0.01,  use_colnames=True)

frequent_itemsets['length'] = frequent_itemsets['itemsets'].apply(lambda x: len(x))
frequent_itemsets[ frequent_itemsets['itemsets'] == {'microservices', 'containers'} ]
frequent_itemsets

frequent_itemsets.head(60)

frequent_itemsets.tail(60)

"""# Nova seção"""